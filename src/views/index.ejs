<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Proyectos</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body class="bg-light">
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="/">Prueba Técnica</a>
    </div>
  </nav>

  <main class="container py-4">
    <h1 class="h3 mb-3">Proyectos</h1>

    <div class="row g-4">
      <div class="col-12 col-lg-4">
        <div class="card">
          <div class="card-header">Registrar proyecto</div>
          <div class="card-body">
            <form id="formProyecto" class="vstack gap-2">
              <input class="form-control" name="nombre" placeholder="Nombre" required />
              <textarea class="form-control" name="descripcion" placeholder="Descripción"></textarea>
              <select class="form-select" name="estado" required>
                <option value="EN_PROGRESO">En progreso</option>
                <option value="FINALIZADO">Finalizado</option>
                <option value="PENDIENTE">Pendiente</option>
              </select>
              <input class="form-control" name="fechaInicio" type="date" required />
              <input class="form-control" name="fechaFin" type="date" />
              <button class="btn btn-primary" type="submit">Guardar</button>
            </form>
          </div>
        </div>
      </div>

      <div class="col-12 col-lg-8">
        <div class="card">
          <div class="card-header d-flex align-items-center justify-content-between">
            <span>Listado</span>
            <button id="btnAnalisis" class="btn btn-sm btn-outline-secondary">Generar análisis</button>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-sm align-middle" id="tabla">
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Estado</th>
                    <th>Inicio</th>
                    <th>Fin</th>
                    <th>Acciones</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
            <hr />
            <h5 class="mt-3">Distribución por estado</h5>
            <canvas id="chartEstados" height="120"></canvas>
            <div class="mt-3">
              <h5>Resumen IA</h5>
              <pre id="resumenIA" class="bg-body-secondary p-2 rounded" style="white-space: pre-wrap;"></pre>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Modal de edición -->
  <div class="modal fade" id="modalEditar" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Editar Proyecto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="formEditar" class="vstack gap-2">
            <input type="hidden" id="editId" />
            <label>Nombre</label>
            <input class="form-control" id="editNombre" required />
            <label>Descripción</label>
            <textarea class="form-control" id="editDescripcion"></textarea>
            <label>Estado</label>
            <select class="form-select" id="editEstado" required>
              <option value="EN_PROGRESO">En progreso</option>
              <option value="FINALIZADO">Finalizado</option>
              <option value="PENDIENTE">Pendiente</option>
            </select>
            <label>Fecha Inicio</label>
            <input class="form-control" id="editFechaInicio" type="date" required />
            <label>Fecha Fin</label>
            <input class="form-control" id="editFechaFin" type="date" />
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="button" class="btn btn-primary" id="btnGuardarEdicion">Guardar cambios</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios@1.7.7/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
  <script>
    const api = axios.create({ baseURL: '/api' });

    async function cargarTabla() {
      const { data } = await api.get('/proyectos');
      const tbody = document.querySelector('#tabla tbody');
      tbody.innerHTML = '';
      for (const p of data) {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${p.id}</td>
          <td>${p.nombre}</td>
          <td>${p.estado}</td>
          <td>${new Date(p.fechaInicio).toLocaleDateString()}</td>
          <td>${p.fechaFin ? new Date(p.fechaFin).toLocaleDateString() : ''}</td>
          <td>
            <button class="btn btn-sm btn-outline-primary me-1 btn-editar" data-id="${p.id}">Editar</button>
            <button class="btn btn-sm btn-outline-danger btn-eliminar" data-id="${p.id}">Eliminar</button>
          </td>
        `;
        tr.querySelector('.btn-editar').addEventListener('click', async (e) => {
          const id = e.target.getAttribute('data-id');
          await abrirModalEditar(id);
        });
        tr.querySelector('.btn-eliminar').addEventListener('click', async (e) => {
          const id = e.target.getAttribute('data-id');
          if (confirm('¿Eliminar este proyecto?')) {
            await api.delete(`/proyectos/${id}`);
            await cargarTodo();
          }
        });
        tbody.appendChild(tr);
      }
    }

    async function cargarGrafico() {
      const { data } = await api.get('/graficos');
      const ctx = document.getElementById('chartEstados');
      if (window._chart) window._chart.destroy();
      window._chart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: data.labels,
          datasets: [{ label: 'Proyectos', data: data.data }]
        }
      });
    }

    function cargarAnalisis() {
      const pre = document.getElementById('resumenIA');
      pre.textContent = 'Generando análisis...';

      const eventSource = new EventSource('/api/analisis');
      let textoAcumulado = '';

      eventSource.onmessage = (event) => {
        try {
          const data = JSON.parse(event.data);
          if (data.done) {
            // Stream terminó
            pre.textContent = data.resumen || textoAcumulado;
            eventSource.close();
          } else if (data.chunk) {
            // Nuevo chunk de texto
            textoAcumulado += data.chunk;
            pre.textContent = textoAcumulado;
          }
        } catch (err) {
          console.error('Error parseando SSE:', err);
        }
      };

      eventSource.onerror = (err) => {
        console.error('Error en EventSource:', err);
        pre.textContent = 'Error al generar análisis. Verifica la consola.';
        eventSource.close();
      };
    }

    async function cargarTodo() {
      await cargarTabla();
      await cargarGrafico();
    }

    async function abrirModalEditar(id) {
      const { data: proyecto } = await api.get(`/proyectos/${id}`);
      document.getElementById('editId').value = proyecto.id;
      document.getElementById('editNombre').value = proyecto.nombre;
      document.getElementById('editDescripcion').value = proyecto.descripcion || '';
      document.getElementById('editEstado').value = proyecto.estado;
      document.getElementById('editFechaInicio').value = new Date(proyecto.fechaInicio).toISOString().split('T')[0];
      document.getElementById('editFechaFin').value = proyecto.fechaFin 
        ? new Date(proyecto.fechaFin).toISOString().split('T')[0] 
        : '';
      const modal = new bootstrap.Modal(document.getElementById('modalEditar'));
      modal.show();
    }

    document.getElementById('btnGuardarEdicion').addEventListener('click', async () => {
      const id = document.getElementById('editId').value;
      const payload = {
        nombre: document.getElementById('editNombre').value,
        descripcion: document.getElementById('editDescripcion').value,
        estado: document.getElementById('editEstado').value,
        fechaInicio: new Date(document.getElementById('editFechaInicio').value).toISOString(),
        fechaFin: document.getElementById('editFechaFin').value 
          ? new Date(document.getElementById('editFechaFin').value).toISOString() 
          : null,
      };
      await api.put(`/proyectos/${id}`, payload);
      bootstrap.Modal.getInstance(document.getElementById('modalEditar')).hide();
      await cargarTodo();
    });

    document.getElementById('formProyecto').addEventListener('submit', async (e) => {
      e.preventDefault();
      const fd = new FormData(e.target);
      const payload = Object.fromEntries(fd.entries());
      if (payload.fechaInicio) payload.fechaInicio = new Date(payload.fechaInicio).toISOString();
      if (payload.fechaFin) payload.fechaFin = new Date(payload.fechaFin).toISOString();
      await api.post('/proyectos', payload);
      e.target.reset();
      await cargarTodo();
    });

    document.getElementById('btnAnalisis').addEventListener('click', cargarAnalisis);

    cargarTodo();
  </script>
</body>
</html>
